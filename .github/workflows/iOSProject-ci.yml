name: Mobile Automation CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Appium
        run: |
          npm install -g appium
          appium -v

      - name: Install Appium XCUITest driver
        run: |
          appium driver install xcuitest

      - name: Debug available simulators/runtimes
        run: |
          echo "=== Available Device Types ==="
          xcrun simctl list devicetypes
          echo "=== Available Runtimes ==="
          xcrun simctl list runtimes

      - name: Boot iOS Simulator (headless)
        run: |
          # Pick latest available iOS 18.x runtime
          SIMULATOR_RUNTIME=$(xcrun simctl list runtimes | grep "iOS 18" | tail -n1 | awk '{print $NF}' | tr -d '()')

          # Pick iPhone 16 Pro if available, otherwise fallback to iPhone 15 Pro
          if xcrun simctl list devicetypes | grep -q "iPhone 16 Pro"; then
            DEVICE_TYPE="com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro"
            DEVICE_NAME="iPhone 16 Pro"
          else
            DEVICE_TYPE="com.apple.CoreSimulator.SimDeviceType.iPhone-15-Pro"
            DEVICE_NAME="iPhone 15 Pro"
          fi

          echo "Using runtime: $SIMULATOR_RUNTIME"
          echo "Using device: $DEVICE_NAME ($DEVICE_TYPE)"

          # Check if TestSimulator already exists
          if xcrun simctl list devices | grep -q "TestSimulator"; then
            echo "Reusing existing TestSimulator"
          else
            echo "Creating new TestSimulator"
            xcrun simctl create TestSimulator $DEVICE_TYPE $SIMULATOR_RUNTIME
          fi

          # Boot simulator in headless mode
          xcrun simctl boot TestSimulator || true
          xcrun simctl bootstatus TestSimulator -b
          xcrun simctl list devices | grep TestSimulator

          # Export vars for later steps
          echo "DEVICE_NAME=$DEVICE_NAME" >> $GITHUB_ENV
          echo "PLATFORM_VERSION=$(echo $SIMULATOR_RUNTIME | grep -oE '[0-9]+-[0-9]+' | tr '-' '.')" >> $GITHUB_ENV

      - name: Start Appium server
        run: |
          appium --base-path /wd/hub &
          sleep 10

      - name: Build with Maven
        run: mvn clean install

      - name: Run Tests
        run: |
          mvn test \
            -Dserver.path=http://127.0.0.1:4723/wd/hub \
            -DdeviceName="$DEVICE_NAME" \
            -DplatformVersion="$PLATFORM_VERSION" \
            -DappPath="$GITHUB_WORKSPACE/UICatalog.app"
